/**
 * 词法分析器
 * 表达式解析的第一个步骤，拆词(词法分析)将表达式拆成一个个token
 * 这里拆词我使用了有限状态机模式，避免代码中出现大量的if语句，造成后期review困难和难以维护的情况。
 * !这里只简单实现核心功能
 */


/**
 * 表达式案例：
 * [指标1] - [电脑功率] * 10 / 2 + (3 * [显卡最大功率])
 * 其中固定的运算符有： + - * / ()
 * 固定标识符：[ ]
 * 固定的计算对象：纯数值 和 标识符'[]'中间部分为一整体
 */


/**
 * 有限状态机设计
 * 状态的设定：init - 初始状态、 numerical - 数值状态、 operator - 操作符状态、 identifier - 标识符状态
 * 那么剔除初始化状态其他的几个状态都有至少开始和结束两个小状态
 * 所以全部的状态应该是：init、numericalStart、numericalEnd、operatorStart、operatorEnd、identifierStart和identifierEnd七个状态
 */


